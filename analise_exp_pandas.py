# -*- coding: utf-8 -*-
"""Analise_Exp_Pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15EM3mpISBMyZDk0IkedCQUQPNJ16z20I
"""

#Importando as bibliotecas
import pandas as pd
import matplotlib.pyplot as plt
plt.style.use("seaborn")

#Upload do arquivo
from google.colab import files
arq=files.upload()

#Criando o DataFrame
df = pd.read_excel("/content/drive/MyDrive/datasets/AdventureWorks.xlsx")

#Visualizando as 5 primeiras linhas
df.head(5)

#Qtde de linhas e colunas
df.shape

#Verificando o tipo de dados
df.dtypes

#Qual receita total
df["Valor Venda"].sum()

#Qual custo total?
#Criando coluna de custo
df["Custo"] = df["Custo Unitário"].mul(df["Quantidade"])

df.head(1)

#Qual custo total?
round(df["Custo"].sum(),2)

#Com a receita, o custo e o total podemos achar o lucro
#Vamos criar uma coluna de lucro que será receita - custo
df["lucro"] = df["Valor Venda"] - df["Custo"]

df.head(1)

#Total Lucro
round(df["lucro"].sum(),2)

#Criando uma coluna com total de dias para enviar o produto
df["Tempo_envio"]= df["Data Envio"] - df["Data Venda"]

df.head(1)

"""Saber a média do tempo de envio para cada marca."""

#Extraindo apenas os dias
df["Tempo_envio"] = (df["Data Envio"] - df["Data Venda"]).dt.days

df.head(1)

#Verificando o tipo de coluna Tempo_envio
df["Tempo_envio"].dtype

#Média do tempo de envio por Marca
df.groupby("Marca")["Tempo_envio"].mean()

"""Missing Values"""

#Verificando se temos dados faltantes
df.isnull().sum()

#Vamos agrupar por ano e marca
df.groupby([df["Data Venda"].dt.year, "Marca"])["lucro"].sum()

#Config de pandas para nao mostrar como numerico para float
pd.options.display.float_format = '{:20,.2f}'.format

#Resetando o Index
lucro_ano = df.groupby([df["Data Venda"].dt.year, "Marca"])["lucro"].sum().reset_index()
lucro_ano

#Qual o total de produtos vendidos?
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending=False)

#Grafico total de produtos vendidos
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending=True).plot.barh(title="Total de Produtos Vendidos")
plt.xlabel("Total")
plt.ylabel("Produto");

df.groupby(df["Data Venda"].dt.year)["lucro"].sum().plot.bar(title="Lucro x Ano")
plt.xlabel("Ano")
plt.ylabel("Receita");

df.groupby(df["Data Venda"].dt.year)["lucro"].sum()

#Selecionando apenas as vendas de 2009
df_2009= df[df["Data Venda"].dt.year == 2009]

df_2009.head(1)

df_2009.groupby(df_2009["Data Venda"].dt.month)["lucro"].sum().plot(title= "Lucro x Mês")
plt.xlabel("Mês")
plt.ylabel("Lucro");

df_2009.groupby("Marca")["lucro"].sum().plot.bar(title= "Lucro x Marca")
plt.xlabel("Mês")
plt.ylabel("Lucro")
plt.xticks(rotation='horizontal');

df_2009.groupby("Classe")["lucro"].sum().plot.bar(title= "Lucro x Classe")
plt.xlabel("Mês")
plt.ylabel("Classe")
plt.xticks(rotation='horizontal');

df["Tempo_envio"].describe()

#Grafico de boxplot
plt.boxplot(df["Tempo_envio"]);

#Histograma
plt.hist(df["Tempo_envio"]);

#Tempo minimo de envio
df["Tempo_envio"].min()

#Tempo maximo de envio
df["Tempo_envio"].max()

#Identificando o Outlier
df[df["Tempo_envio"] == 20]

df.to_csv("Df_Vendas_Novo.csv", index=False)

